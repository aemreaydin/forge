[tasks.format]
install_crate = "rustfmt"
command = "cargo"
args = ["fmt", "--", "--emit=files"]

[tasks.clean]
command = "cargo"
args = ["clean"]

[tasks.build]
command = "cargo"
args = ["build"]
dependencies = ["format"]

[tasks.build_shaders]
condition = { files_modified = { input = [
  "shaders/*.glsl",
  "shaders/*.glsl",
], output = [
  "./target/debug/examples/shaders/*.spv",
] } }
script_runner = "@duckscript"
script = '''
files = glob_array ./shaders/*.glsl
for file in ${files}
  basename = substring ${file} -5
  spv_file = concat ${basename} .spv
  exec --fail-on-error glslang -V "${file}" -o "${spv_file}"
  glob_cp shaders/*.spv target/debug/examples/shaders/
end
'''

[tasks.parallel_build]
run_task = { name = ["build", "build_shaders"], parallel = true }

[tasks.test]
command = "cargo"
args = ["test"]
dependencies = ["format"]

[tasks.testbed]
command = "cargo"
env = { "RUST_LOG" = "info" }
args = ["run", "--example", "testbed", "meshes/spot_triangulated.obj"]
dependencies = ["parallel_build"]
